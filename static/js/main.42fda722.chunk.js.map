{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","id","classNames","completed","TodoList","todos","map","username","getUser","userId","usersFromServer","find","preparedTodos","visibleTodos","App","useState","setTitle","setUserId","isValidtitle","setIsValidTitle","isValidUser","setIsValidUser","action","method","onSubmit","event","preventDefault","newTodo","Math","max","push","placeholder","type","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42fda722.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, user, id } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': todo.completed },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst visibleTodos = [...preparedTodos];\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isValidtitle, setIsValidTitle] = useState(false);\n  const [isValidUser, setIsValidUser] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0 || title === '') {\n      setIsValidTitle(title === '');\n      setIsValidUser(userId === 0);\n\n      return;\n    }\n\n    const maxId = Math.max(...visibleTodos.map(todo => todo.id));\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsValidTitle(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setIsValidUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span className=\"inputTitle\">\n              Title:\n            </span>\n            <input\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              type=\"text\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n          {isValidtitle && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n        <div className=\"field\">\n          <label>\n            <span className=\"inputTitle\">\n              User:\n            </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUser}\n            >\n              <option\n                disabled\n                value=\"0\"\n              >\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {isValidUser && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n        <button\n          data-cy=\"submitButton\"\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}